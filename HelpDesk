Sub ClearSheet()
    ActiveSheet.UsedRange.Clear 'Clear all cells
    ActiveSheet.UsedRange.ClearFormats  'Clear the formats
End Sub

' Clear
' ClearFormats
' Copy
' Offset
' Select

' ===== Functions =====

Function fnSearchBEmpId(empId As Long) As Integer
  Dim lastRow As Long, empAddress As String
  Dim TargetRange As Range
  On Error GoTo MyErrorHandler
  lastRow = EmployeeSheet.UsedRange.Rows.Count
  Set TargetRange = EmployeeSheet.Range("A1:A" & lastRow)
  fnSearchByEmpId = WorksheetFunction.Match(empId, TargetRange, 0)
  Exit Function
MyErrorHandler:
    fnSearchByEmpId = 0
End Function


' Match Function


' Use ChartObject to create a chart

' AdvancedFilter(Action, CriteriaRange, CopyToRane, Unique) -> Filters or copies data from a list based on a criteria range

'================================

Sub Constants()
  Const myInteger As Integer = 42
  Const myString As String = "Monday"
  Const myDate As Date = "#02.02.2002#"
  'These are constant values
End Sub


' confidential - private scope -> Local Variable
' limited to few members only - module scope -> Module Variable
' less important - public scope -> Project Variable


' Local Variable Declaration:
Sub local_variable()
  Dim strName As String ' local variable
  strName = Cells(3, 4)
  MsgBox "Hello " & strName
End Sub

' Module Variable ->
' In the beginning of a module write Option Explicit, variables can be accessed through the whole module

' Project Variable
Public intNum As Integer
Sub project_variable()
   intNum = 12
End Sub


' Input Box
Sub InputBox1()
  Dim strHello As String
  strHello = InputBox("Enter your name: ", "Name Question")
  If strHello = "Kadir" Then
     MsgBox "Hello " & strHello
  Else
     MsgBox "You are not qualified to Enter " & strHello
  End If
End Sub

Sub InputBox2()
  Dim intRollNo As Long
  Dim strName As String
  intRollNo = InputBox("Enter your Roll No ", "Demo Roll No")
  strName = InputBox("Enter your Name ", "Demo Name")
  
  TestSht.Cells(2, 2).Value = intRollNo
  TestSht.Cells(3, 2).Value = strName
  
  MsgBox "Roll No = " + CStr(intRollNo) + " Name = " + strName  ' CStr is used to conver the integer to string
  
End Sub


' Statements
' Conditional Statements:
    ' If ... Then ... Else Statement
    ' Select ... Case Statement
' Loop Statements:
    ' Do While ... Loop
    ' While ... Wend
    ' For ... Next
    ' For Each ... Next
' Other control Statements:
    ' With ... End With



' If Statements
Sub Conditional_Statement()
  Dim dblResult As Double
  Dim intAge As Integer
  
  intAge = 3
  
  If intAge = 1 Then
     dblResult = 10 + 10
  ElseIf intAge = 2 Then
     dblResult = 10 - 10
  ElseIf intAge = 3 Then
     dblResult = 10 * 10
  ElseIf intAge = 4 Then
     dblResult = 10 / 10
  End If
  TestSht.Cells(1, 1).Value = dblResult
End Sub

'-----------------
'Assignment if statement
'-----------------

Sub If_Statement()
  Dim intNum As Integer
  
  intNum = InputBox("Enter any Integer number", "demo")
  
  If intNum Mod 2 = 0 Then   ' Mod function
     MsgBox "Even Number"
  Else
     MsgBox "Odd Number"
  End If
End Sub

' Select Case
Sub Select_Case()
  Dim strGender As String
  Dim strGenderCode As String
  
  strGenderCode = InputBox("Enter your Gender Code (M/F)", "Demo Gender")
  
  Select Case strGenderCode
  Case "M"
      strGender = "Male"
  Case "F"
      strGender = "Female"
  End Select
  
  If strGender = "Male" Then
     MsgBox "He is " & strGender
  ElseIf strGender = "Female" Then
     MsgBox "She is " & strGender
  Else
     MsgBox "Wrong Input"
  End If
End Sub


' Select Case using multiple Values
' Select Case nnn
'     Case 1, 2
'     Case 3, 4
' End Select

' Select Case using Condition
' Select Case intAge
'     Case Is < 12
'     Case Is > 24
'     Case Is = 35
'     Case Is < 99
' End Select
